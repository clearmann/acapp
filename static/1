class Player extends AcGameObject {
    constructor(playground, x, y, radius, color, speed, is_me) {
        super();
        this.playground = playground;
        this.ctx = this.playground.game_map.ctx;
        this.x = x;
        this.y = y;
        this.vx = 0;
        this.vy = 0;
        this.move_length = 0;//鼠标点击后要移动的距离
        this.radius = radius;
        this.color = color;
        this.speed = speed;
        this.is_me = is_me;
        this.eps = 0.1; // 一个浮点运算的标记，小于eps就算是零

        this.cur_skill = null;
    }
    start(){
        if(this.is_me){
            this.add_listening_events();
        } else {
            let tx = Math.random() * this.playground.width;
            let ty = Math.randon() * this.playground.height;
            this.move_to(tx, ty);
        }
    }
    add_listening_events(){
        let outer = this;
        this.playground.game_map.$canvas.on("contextmenu", function(){//不让鼠标右键出现菜单界面
            return false;
        });
        this.playground.game_map.$canvas.mousedown(function(e){
            if(e.which === 3) {//e.which 检测鼠标按键 左键等于1 滚轮等于2 右键等于3
                outer.move_to(e.clientX, e.clientY);
            } else if(e.which === 1){
                if(outer.cur_skill == "fireball") {
                    outer.shootfireball(e.clientX, e.clientY)
                }
                outer.cur_skill == null;
            }
        });
        $(window).keydown(function(e) {
            if (e.which === 81) { //81等于q键
                outer.cur_skill = "fireball";
                return false;
            }
        });
    }
    shoot_fireball(tx, ty) {
        let x = this.x, y = this.y;
        let radius = this.playground.height * 0.01;
        let angle = Math.atan2(ty - this.y, tx - this.x);
        let vx = Math.cos(angle), vy = Math.sin(angle);
        let color = "orange";
        let speed = this.playground.height * 0.5;
        let move_length = this.playground.height * 1;//火球发射的长度
        new Fireball(this.playground, this, x, y, radius, vx, xy, color, speed, move_length);
    }
    get_dist(x1, y1, x2, y2) {
        let dx = x1 - x2;
        let dy = y1 - y2;
        return Math.sqrt(dx * dx + dy * dy);
    }
    move_to(tx, ty) {
        this.move_length = this.get_dist(this.x, this.y, tx, ty);
        let angle = Math.atan2(ty - this.y, tx - this.x); //移动的角度
        this.vx = Math.cos(angle);
        this.vy = Math.sin(angle);
    }
    update(){
        if(this.move_length < this.eps) {
            this.move_length = 0;
            this.vx = this.vy = 0;
        } else {
            let moved = Math.min(this.speed * this.timedelta / 1000, this.move_length);
            this.x += this.vx * moved;
            this.y += this.vy * moved;
            this.length -= moved;//每次移动之后，从全部长度减去
        }
        this.render(); //时间是流逝的，这一帧不画，就会消失掉
    }
    render(){
        this.ctx.beginPath();
        this.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);
        this.ctx.fillStyle = this.color;
        this.ctx.fill();
    }
}
